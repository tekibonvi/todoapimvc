// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using todoapimvc.Context;

#nullable disable

namespace todoapimvc.Migrations
{
    [DbContext(typeof(ToDoContext))]
    [Migration("20240418020455_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("todoapimvc.Models.TodoItem", b =>
                {
                    b.Property<int>("Id_todo_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ritle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId_user")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id_todo_item");

                    b.HasIndex("UserId_user");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("todoapimvc.Models.User", b =>
                {
                    b.Property<int>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_user");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id_user = 3,
                            Address = "Balcarce 16",
                            Email = "ezequiasbonvi@utn.com",
                            Name = "Ezequias"
                        },
                        new
                        {
                            Id_user = 5,
                            Address = "Av Alberdi 16",
                            Email = "hermankuka@utn.com",
                            Name = "Herman"
                        },
                        new
                        {
                            Id_user = 9,
                            Address = "Rio de Janeiro 300",
                            Email = "juanperez@utn.com",
                            Name = "Juan"
                        },
                        new
                        {
                            Id_user = 15,
                            Address = "Hermano Indio 24",
                            Email = "marcefrac@utn.com",
                            Name = "Marcelo"
                        });
                });

            modelBuilder.Entity("todoapimvc.Models.TodoItem", b =>
                {
                    b.HasOne("todoapimvc.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
